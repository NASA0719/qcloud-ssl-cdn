name: Update Cert

on:
  schedule:
    - cron: '0 10 1 * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HAS_TELEGRAM: ${{ secrets.CHAT_ID != '' && secrets.BOT_TOKEN != '' }}
      HAS_BARK: ${{ secrets.BARK_KEY != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Environment
        run: |
          curl https://get.acme.sh | sh -s email=my@example.com
          pip install -r requirements.txt

      - name: Get Current Time
        id: get-current-time
        env:
          TZ: ${{ secrets.TIMEZONE || 'Asia/Shanghai' }}
        run: echo "time=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT

      - name: Update Cert
        env:
          DP_Id: ${{ secrets.DP_Id }}
          DP_Key: ${{ secrets.DP_Key }}
          CF_Token: ${{ secrets.CF_TOKEN }}
          CF_Account_ID: ${{ secrets.CF_ACCOUNT_ID }}
          ACME_DNS_TYPE: ${{ secrets.ACME_DNS_TYPE }}
          ACME_DOMAIN: ${{ secrets.ACME_DOMAIN }}
          SECRETID: ${{ secrets.SECRETID }}
          SECRETKEY: ${{ secrets.SECRETKEY }}
          CDN_DOMAIN: ${{ secrets.CDN_DOMAIN }}
          UPDATE_SSL: ${{ secrets.UPDATE_SSL }}
          ZONE_ID: ${{ secrets.ZONE_ID }}
          DELETE_OLD_CERTS: ${{ secrets.DELETE_OLD_CERTS }}
          PUSH_URL: ${{ secrets.PUSH_URL }}
          PURGE_URL: ${{ secrets.PURGE_URL }}
          ENABLE_HSTS: ${{ secrets.ENABLE_HSTS }}
          ENABLE_OCSP: ${{ secrets.ENABLE_OCSP }}
          ENABLE_HTTP2: ${{ secrets.ENABLE_HTTP2 }}
          CERT_HOME: /home/runner/.acme.sh
          ACME_HOME: /home/runner/.acme.sh
          WORK_DIR: .
        run: exit 1 # sh ./docker/update.sh

      - name: Bark Notification
        if: always() && env.HAS_BARK == 'true'
        uses: monlor/bark-action@v3
        with:
          host: ${{ secrets.BARK_HOST }}
          key: ${{ secrets.BARK_KEY }}
          title: Github Actions
          body: 'Your tencent cdn certs update ${{ job.status }}！'
          isArchive: 1
          url: 'github://github.com/${{ github.repository }}'
          group: Github
          icon: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

      - name: Telegram Notification
        if: always() && env.HAS_TELEGRAM == 'true'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            *📢 证书更新通知 [${{ job.status }}]*

            *🕒 时间*: ${{ steps.get-current-time.outputs.time }}
            *📊 状态*: ${{ job.status == 'success' && '✅ 证书更新成功' || '❌ 证书更新失败' }}
            *🔗 查看运行*: [点击查看详情](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})